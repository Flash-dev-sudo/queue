==> Docs on specifying a bun version: https://render.com/docs/bun-version
==> Running build command 'npm install --include=dev && npm run build'...
up to date, audited 521 packages in 1s
70 packages are looking for funding
  run `npm fund` for details
7 moderate severity vulnerabilities
To address issues that do not require attention, run:
  npm audit fix
To address all issues (including breaking changes), run:
  npm audit fix --force
Run `npm audit` for details.
> rest-express@1.0.0 build
> vite build && esbuild server/index.ts --platform=node --packages=external --bundle --format=esm --outdir=dist
vite v5.4.14 building for production...
transforming...
Browserslist: browsers data (caniuse-lite) is 8 months old. Please run:
  npx update-browserslist-db@latest
  Why you should do it regularly: https://github.com/browserslist/update-db#readme
âœ“ 2134 modules transformed.
rendering chunks...
computing gzip size...
../dist/public/index.html                   1.40 kB â”‚ gzip:   0.68 kB
../dist/public/assets/index-CvFJbaa5.css   65.46 kB â”‚ gzip:  11.40 kB
../dist/public/assets/index-BS4NwzQZ.js   418.63 kB â”‚ gzip: 130.12 kB
âœ“ built in 3.83s
  dist/index.js  48.7kb
âš¡ Done in 5ms
==> Uploading build...
==> Uploaded in 7.3s. Compression took 2.9s
==> Build successful ðŸŽ‰
==> Deploying...
==> Running 'npm start'
> rest-express@1.0.0 start
> NODE_ENV=production node dist/index.js
Initializing database for deployment...
Initializing database tables...
Database initialized successfully!
12:45:41 AM [express] serving on port 10000
==> Your service is live ðŸŽ‰
==> Detected service running on port 10000
==> Docs on specifying a port: https://render.com/docs/web-services#port-binding
==> Detected service running on port 10000
==> Docs on specifying a port: https://render.com/docs/web-services#port-binding
==> Running 'npm start'
> rest-express@1.0.0 start
> NODE_ENV=production node dist/index.js
Initializing database for deployment...
Initializing database tables...
Database initialized successfully!
1:22:02 AM [express] serving on port 10000
WebSocket client connected
Client registered as order
Error fetching categories: LibsqlError: SQL_PARSE_ERROR: SQL string could not be parsed: unexpected end of input at (1, 56)
    at mapHranaError (file:///opt/render/project/src/node_modules/@libsql/client/lib-esm/hrana.js:279:16)
    at file:///opt/render/project/src/node_modules/@libsql/client/lib-esm/http.js:76:23
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async LibSQLPreparedQuery.all (file:///opt/render/project/src/node_modules/drizzle-orm/libsql/session.js:126:18)
    at async DatabaseStorage.getCategories (file:///opt/render/project/src/dist/index.js:739:12)
    at async file:///opt/render/project/src/dist/index.js:924:27 {
  code: 'SQL_PARSE_ERROR',
  rawCode: undefined,
  [cause]: [ResponseError: SQL string could not be parsed: unexpected end of input at (1, 56)] {
    code: 'SQL_PARSE_ERROR',
    proto: {
      message: 'SQL string could not be parsed: unexpected end of input at (1, 56)',
      code: 'SQL_PARSE_ERROR'
    }
  }
}
1:23:52 AM [express] GET /api/categories 500 in 151ms :: {"message":"Error fetching categories"}
1:23:52 AM [express] GET /api/menu-items 200 in 193ms :: [{"id":841,"categoryId":1,"name":"Chips","dâ€¦
WebSocket client disconnected
WebSocket client connected
Client registered as kitchen
1:24:11 AM [express] GET /api/orders/active 304 in 88ms :: []
WebSocket client disconnected
Error fetching categories: LibsqlError: SQL_PARSE_ERROR: SQL string could not be parsed: unexpected end of input at (1, 56)
    at mapHranaError (file:///opt/render/project/src/node_modules/@libsql/client/lib-esm/hrana.js:279:16)
    at file:///opt/render/project/src/node_modules/@libsql/client/lib-esm/http.js:76:23
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async LibSQLPreparedQuery.all (file:///opt/render/project/src/node_modules/drizzle-orm/libsql/session.js:126:18)
    at async DatabaseStorage.getCategories (file:///opt/render/project/src/dist/index.js:739:12)
    at async file:///opt/render/project/src/dist/index.js:924:27 {
  code: 'SQL_PARSE_ERROR',
  rawCode: undefined,
  [cause]: [ResponseError: SQL string could not be parsed: unexpected end of input at (1, 56)] {
    code: 'SQL_PARSE_ERROR',
    proto: {
      message: 'SQL string could not be parsed: unexpected end of input at (1, 56)',
      code: 'SQL_PARSE_ERROR'
    }
  }
}
1:24:15 AM [express] GET /api/categories 500 in 30ms :: {"message":"Error fetching categories"}
Need better ways to work w